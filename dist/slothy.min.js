!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.slothy=t()}(this,function(){"use strict";return function(e){function t(e){var t=e.dataset.slothy;t&&(e.src=t,e.onload=function(){r&&r(e),delete e.dataset.slothy})}void 0===e&&(e={});var o=e.offset;void 0===o&&(o=100);var n=e.threshold;void 0===n&&(n=.01);var r=e.onLoad,i=Array.from(document.querySelectorAll("[data-slothy]"));if("IntersectionObserver"in window){var f={rootMargin:o+"px 0px",threshold:n},s=new IntersectionObserver(function(e){e.forEach(function(e){e.intersectionRatio>0&&(s.unobserve(e.target),t(e.target))})},f);i.forEach(function(e){return s.observe(e)})}else i.forEach(function(e){return t(e)})}});
//# sourceMappingURL=slothy.min.js.map
